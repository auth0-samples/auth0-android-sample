version: 2
jobs:
  node_server:
    working_directory: ~/auth0-android-sample
    docker:
      - image: circleci/node:8  
    steps:
      - checkout 
      - run:
          name: Setting up npm server
          command: npm init -y
      
      - run:
          name: Installing pip dependencies
          command: npm i python

      - run: 
          name: Cloning repo
          command: git clone https://github.com/auth0-samples/mobile-quickstarts-tests scripts
      - run:
          name: Installing python dependencies
          command: pip install -r requirements.txt
  android_00:
    working_directory: ~/auth0-android-sample/00-Login
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      - JVM_OPTS: -Xmx3200m
      - AUTH0_CONFIG: strings.xml
    steps:
      - checkout:
          path: ~/auth0-android-sample
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Setup Auth0 environment
          command: |
            cd ~/auth0-android-sample/00-Login/app/src/main/res/values/ 
            mv $AUTH0_CONFIG.example $AUTH0_CONFIG
            sed -i 's/{CLIENT_ID}/'$client_id'/g' $AUTH0_CONFIG
            sed -i 's/{DOMAIN}/'$Domain'/g' $AUTH0_CONFIG
            echo -i $AUTH0_CONFIG
      - run:
          name: Chmod permissions 
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Compile apk file
          command: ./gradlew assembleDebug
      - run:
          name : App upload and Set app id in environment variable.
          command : |
            cd 
            APP_UPLOAD_RESPONSE=$(curl -u "benjaminlizardo2:2SP8isyH9azrD1sSsiCJ" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "file=@auth0-android-sample/00-Login/app/build/outputs/apk/debug/app-debug.apk" -F 'data={"custom_id": "Auth0"}')
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1; 
            fi
      - save_cache:
          paths:
            - ./gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
workflows:
  version: 2
  node_android:
    jobs:
      - node_server
      - android_00:
          context: Quickstart MOBILE Test
          requires:
            - node_server
          


